{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from 'formik';\nimport styles from \"./styles\";\nimport * as yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar cadastroValidationSchema = yup.object().shape({\n  name: yup.string().required('É necessário um nome válido'),\n  email: yup.string().email('O email não é válido').required('É necessário um email válido'),\n  password: yup.string().min(6, function (_ref) {\n    var min = _ref.min;\n    return \"A senha deve conter pelo menos  \" + min + \" caracteres\";\n  }).required('É necessário uma senha válida')\n});\nexport default function App(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cadastrou = _useState2[0],\n      setCadastrou = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mensagem = _useState4[0],\n      setMensagem = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      apareceMensagem = _useState6[0],\n      setApareceMensagem = _useState6[1];\n\n  function createUserInNodeApi(values) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"name\": values.name,\n      \"email\": values.email,\n      \"password\": values.password\n    });\n    var requestOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8080/addUser\", requestOption).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      if (res.error) {\n        setCadastrou(false);\n      } else {\n        setCadastrou(true);\n      }\n\n      setMensagem(res.message);\n      setApareceMensagem(true);\n      setTimeout(function () {\n        setApareceMensagem(false);\n      }, 3000);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.subTitle,\n      children: \"Cadastro de usu\\xE1rio\"\n    }), _jsx(Formik, {\n      style: {},\n      validateOnMount: true,\n      validationSchema: cadastroValidationSchema,\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return createUserInNodeApi(values);\n      },\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n            handleBlur = _ref3.handleBlur,\n            errors = _ref3.errors,\n            values = _ref3.values,\n            touched = _ref3.touched,\n            handleSubmit = _ref3.handleSubmit;\n        return _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            name: \"name\",\n            type: \"name\",\n            value: values.name,\n            onChangeText: handleChange(\"name\"),\n            onBlur: handleBlur(\"name\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu nome\"\n          }), errors.name && touched.name && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.name\n          }), _jsx(TextInput, {\n            name: \"email\",\n            type: \"email\",\n            value: values.email,\n            onChangeText: handleChange(\"email\"),\n            onBlur: handleBlur(\"email\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu email\"\n          }), errors.email && touched.email && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.email\n          }), _jsx(TextInput, {\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChangeText: handleChange(\"password\"),\n            onBlur: handleBlur(\"password\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite sua senha\",\n            secureTextEntry: true\n          }), errors.password && touched.password && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.password\n          }), mensagem != \"\" ? !cadastrou ? _jsx(Text, {\n            style: [styles.titleErros, {\n              display: apareceMensagem ? 'block' : 'none'\n            }],\n            children: mensagem\n          }) : _jsx(Text, {\n            style: [styles.titleSucessos, {\n              display: apareceMensagem ? 'block' : 'none'\n            }],\n            children: mensagem\n          }) : \"\", _jsx(TouchableOpacity, {\n            style: styles.buttonSubmit,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonTitle,\n              children: \"Cadastrar\"\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        navigation.navigate(\"Login\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonTitle,\n        children: \"Voltar ao login\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Formik","styles","yup","cadastroValidationSchema","object","shape","name","string","required","email","password","min","App","navigation","cadastrou","setCadastrou","mensagem","setMensagem","apareceMensagem","setApareceMensagem","createUserInNodeApi","values","myHeaders","Headers","append","raw","JSON","stringify","requestOption","method","headers","body","redirect","mode","fetch","then","response","json","res","error","message","setTimeout","catch","console","log","container","subTitle","handleChange","handleBlur","errors","touched","handleSubmit","inputStyle","titleErros","display","titleSucessos","buttonSubmit","buttonTitle","button","navigate"],"sources":["/Users/caioaraujo/Desktop/STEP COMPUTER ACADEMY/MÓDULO 5 STEP/NODE JS/DEVERES NODE JS/PROJETO-FINAL/front-end/src/pages/createUser/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, View, TextInput, TouchableOpacity } from 'react-native'\nimport { Formik } from 'formik'\nimport styles from './styles'\nimport * as yup from 'yup'\n\nconst cadastroValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('É necessário um nome válido'),\n  email: yup\n    .string()\n    .email('O email não é válido')\n    .required('É necessário um email válido'),\n  password: yup\n    .string()\n    .min(6, ({min}) => `A senha deve conter pelo menos  ${min} caracteres`)\n    .required('É necessário uma senha válida'),\n})\n\nexport default function App({navigation}) {\n    const [cadastrou, setCadastrou] = useState(false);\n    const [mensagem, setMensagem] = useState(\"\");\n    const [apareceMensagem, setApareceMensagem] = useState(false);\n\n    function createUserInNodeApi(values) {\n        var myHeaders = new Headers()\n        myHeaders.append(\"Content-type\", \"application/json\")\n  \n        var raw = JSON.stringify({\n          \"name\": values.name,\n          \"email\": values.email,\n          \"password\": values.password\n        })\n  \n        var requestOption = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow',\n          mode: 'cors'\n        }\n  \n        fetch(\"http://localhost:8080/addUser\", requestOption)\n          .then((response) => { return response.json() })\n          .then((res) => {\n               if (res.error) {\n                   setCadastrou(false);\n               } else {\n                   setCadastrou(true);\n               }\n               setMensagem(res.message);\n               setApareceMensagem(true);\n               setTimeout(() => {\n                 setApareceMensagem(false);\n               }, 3000);\n              \n           })\n          .catch((error) => { console.log(error); })\n  \n    }\n    return (\n      <View style={styles.container}>\n        <Text style={styles.subTitle}>Cadastro de usuário</Text>\n        <Formik\n          style={{}}\n          validateOnMount={true}\n          validationSchema={cadastroValidationSchema}\n          initialValues={\n            {\n              name: \"\",\n              email: \"\",\n              password: \"\",\n            }\n          }\n          onSubmit={values => createUserInNodeApi(values)}\n        >\n        {\n          ({ handleChange, handleBlur, errors, values, touched, handleSubmit }) => (\n            <>\n              <TextInput\n                name=\"name\"\n                type={\"name\"}\n                value={values.name}\n                onChangeText={handleChange(\"name\")}\n                onBlur={handleBlur(\"name\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu nome\"\n              />\n              {(errors.name && touched.name) &&\n                <Text style={styles.titleErros}>{errors.name}</Text>\n              }\n\n              <TextInput\n                name=\"email\"\n                type={\"email\"}\n                value={values.email}\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu email\"\n              />\n              {(errors.email && touched.email) &&\n                <Text style={styles.titleErros}>{errors.email}</Text>\n              }\n\n              <TextInput\n                name=\"password\"\n                type={\"password\"}\n                value={values.password}\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite sua senha\"\n                secureTextEntry\n              />\n              {(errors.password && touched.password) &&\n                <Text style={styles.titleErros}>{errors.password}</Text>\n              }\n\n              {\n                  mensagem != \"\" ? \n                    !cadastrou ? \n                    (\n                        <Text style={[styles.titleErros, {display: apareceMensagem ? 'block' : 'none'}]}>{mensagem}</Text>\n                    ) : \n                    (\n                        <Text style={[styles.titleSucessos, {display: apareceMensagem ? 'block' : 'none'}]}>{mensagem}</Text>\n                    )\n                    :\n                    \"\"\n              }\n\n              <TouchableOpacity style={styles.buttonSubmit} onPress={handleSubmit}>\n                <Text style={styles.buttonTitle}>Cadastrar</Text>\n              </TouchableOpacity>\n            </>\n          )\n        }\n      </Formik>\n      \n      <TouchableOpacity style={styles.button} onPress={()=>{navigation.navigate(\"Login\")}}>\n        <Text style={styles.buttonTitle}>Voltar ao login</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}