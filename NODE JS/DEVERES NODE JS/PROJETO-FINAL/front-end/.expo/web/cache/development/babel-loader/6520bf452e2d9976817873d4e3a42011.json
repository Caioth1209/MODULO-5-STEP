{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Home from \"../pages/home\";\nimport User from \"../pages/user\";\nimport Login from \"../pages/login\";\nimport CreateUser from \"../pages/createUser\";\nimport ResetPassword from \"../pages/resetPassword\";\nimport Splash from \"../pages/splash\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport { useEffect } from 'react';\nimport { AuthContext } from \"./context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\n\nvar AuthStackScreen = function AuthStackScreen() {\n  return _jsxs(AuthStack.Navigator, {\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(AuthStack.Screen, {\n      name: \"resetPassword\",\n      component: ResetPassword,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(AuthStack.Screen, {\n      name: \"createUser\",\n      component: CreateUser,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\n\nvar Tabs = createBottomTabNavigator();\n\nvar TabsScreen = function TabsScreen() {\n  return _jsx(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home';\n          }\n\n          return _jsx(FontAwesome5, {\n            name: iconName,\n            size: 32,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {},\n    children: _jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: Home\n    })\n  });\n};\n\nvar RootStack = createStackNavigator();\n\nvar RootStackScreen = function RootStackScreen(_ref3) {\n  var userToken = _ref3.userToken;\n  return _jsx(RootStack.Navigator, {\n    headerMode: \"none\",\n    children: userToken ? _jsx(RootStack.Screen, {\n      name: \"App\",\n      component: TabsScreen,\n      options: {\n        animationEnabled: false\n      }\n    }) : _jsx(RootStack.Screen, {\n      name: \"Auth\",\n      component: AuthStackScreen,\n      options: {\n        animationEnabled: false\n      }\n    })\n  });\n};\n\nexport default function App() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setisLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userToken = _React$useState4[0],\n      setUserToken = _React$useState4[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn() {\n        setisLoading(false);\n        setUserToken(\"123456agdgaydsga\");\n        return \"123456agdgaydsga\";\n      },\n      signOut: function signOut() {\n        setisLoading(false);\n        setUserToken(null);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function () {\n      setisLoading(false);\n    }, 100);\n  }, []);\n\n  if (isLoading) {\n    return _jsx(Splash, {});\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsx(NavigationContainer, {\n      children: _jsx(RootStackScreen, {\n        userToken: userToken\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Home","User","Login","CreateUser","ResetPassword","Splash","createStackNavigator","FontAwesome5","useEffect","AuthContext","AuthStack","AuthStackScreen","headerShown","Tabs","TabsScreen","route","tabBarIcon","focused","color","iconName","name","RootStack","RootStackScreen","userToken","animationEnabled","App","useState","isLoading","setisLoading","setUserToken","authContext","useMemo","signIn","signOut","setTimeout"],"sources":["/Users/caioaraujo/Desktop/STEP COMPUTER ACADEMY/MÓDULO 5 STEP/NODE JS/DEVERES NODE JS/PROJETO-FINAL/front-end/src/routes/index.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Home from \"../pages/home\"\nimport User from \"../pages/user\"\nimport Login from \"../pages/login\"\nimport CreateUser from \"../pages/createUser\"\nimport ResetPassword from \"../pages/resetPassword\"\nimport Splash from \"../pages/splash\"\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport { useEffect } from 'react';\n\nimport { AuthContext } from \"./context\"\n\nconst AuthStack = createStackNavigator();\nconst AuthStackScreen = () => (\n  <AuthStack.Navigator>\n    <AuthStack.Screen\n      name=\"Login\"\n      component={Login}\n      options={{ headerShown: false }}\n    />\n    <AuthStack.Screen\n      name=\"resetPassword\"\n      component={ResetPassword}\n      options={{ headerShown: false }}\n    />\n    <AuthStack.Screen\n      name=\"createUser\"\n      component={CreateUser}\n      options={{ headerShown: false }}\n    />\n  </AuthStack.Navigator>\n);\n\nconst Tabs = createBottomTabNavigator();\nconst TabsScreen = () => (\n  <Tabs.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color }) => {\n        let iconName;\n\n        if (route.name === 'Home') {\n          iconName = focused\n            ? 'home'\n            : 'home';\n        }\n        return <FontAwesome5 name={iconName} size={32} color={color} />;\n      },\n    })}\n    tabBarOptions={{}}\n  >\n    <Tabs.Screen name=\"Home\" component={Home} />\n  </Tabs.Navigator>\n);\n\nconst RootStack = createStackNavigator();\nconst RootStackScreen = ({ userToken }) => (\n  <RootStack.Navigator headerMode=\"none\">\n    {userToken ? (   \n      <RootStack.Screen\n        name=\"App\"\n        component={TabsScreen}\n        options={{\n          animationEnabled: false\n        }}\n      />\n    ) : (\n      <RootStack.Screen\n        name=\"Auth\"\n        component={AuthStackScreen}\n        options={{\n          animationEnabled: false\n        }}\n      />\n    )}\n  </RootStack.Navigator>\n);\n\n\nexport default function App() {\n  const [isLoading, setisLoading] = React.useState(true)\n  const [userToken, setUserToken] = React.useState(null)\n\n  // function listenloginUserInNodeApi() {\n  //   var myHeaders = new Headers()\n  //   myHeaders.append(\"Content-type\", \"application/json\")\n\n  //   var raw = JSON.stringify({\n  //     \"email\": \"a@b.com\",\n  //     \"password\": \"123456\"\n  //   })\n\n  //   var requestOption = {\n  //     method: 'POST',\n  //     headers: myHeaders,\n  //     body: raw,\n  //     redirect: 'follow',\n  //     mode: 'cors'\n  //   }\n\n  //   fetch(\"http://localhost:8080/loginUser\", requestOption)\n  //     .then((response) => { return response.json() })\n  //     .then((response) => { console.log(response.token); })\n  //     .catch((error) => { console.log(error); })\n\n  // }\n\n  const authContext = React.useMemo(() => {\n    return {\n      signIn: () => {\n        setisLoading(false)\n        setUserToken(\"123456agdgaydsga\")\n        return \"123456agdgaydsga\"\n      },\n      signOut: () => {\n        setisLoading(false)\n        setUserToken(null)\n      },\n    }\n  }, [])\n\n  useEffect(() => {\n    setTimeout(() => {\n      setisLoading(false)\n    }, 100);\n  }, [])\n\n  if (isLoading) {\n    return <Splash />\n  }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        <RootStackScreen userToken={userToken} />\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}