{"ast":null,"code":"import React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { Formik } from 'formik';\nimport styles from \"./styles\";\nimport * as yup from 'yup';\nimport { AuthContext } from \"../../routes/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginValidationSchema = yup.object().shape({\n  email: yup.string().email('O email nao é válido').required('é necessário um email válido'),\n  password: yup.string().min(6, function (_ref) {\n    var min = _ref.min;\n    return \"A senha deve conter pelo menos  \" + min + \" caractres\";\n  }).required('é necessário uma senha valida válido')\n});\nexport default function App(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  function loginUserInNodeApi(values) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": values.email,\n      \"password\": values.password\n    });\n    var requestOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8080/loginUser\", requestOption).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n    }).then(function (response) {\n      signIn();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"LOGIN\"\n    }), _jsx(Formik, {\n      style: {},\n      validateOnMount: true,\n      validationSchema: loginValidationSchema,\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return loginUserInNodeApi(values);\n      },\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n            handleBlur = _ref3.handleBlur,\n            errors = _ref3.errors,\n            values = _ref3.values,\n            touched = _ref3.touched,\n            handleSubmit = _ref3.handleSubmit;\n        return _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            name: \"email\",\n            type: \"email\",\n            value: values.email,\n            onChangeText: handleChange(\"email\"),\n            onBlur: handleBlur(\"email\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu email\"\n          }), errors.email && touched.email && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.email\n          }), _jsx(TextInput, {\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChangeText: handleChange(\"password\"),\n            onBlur: handleBlur(\"password\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite sua senha\",\n            secureTextEntry: true\n          }), errors.password && touched.password && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.password\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonSubmit,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonTitle,\n              children: \"Login\"\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        navigation.navigate(\"createUser\");\n      },\n      children: _jsx(Text, {\n        style: styles.buttonTitle,\n        children: \"Criar usu\\xE1rio\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Formik","styles","yup","AuthContext","loginValidationSchema","object","shape","email","string","required","password","min","App","navigation","useContext","signIn","loginUserInNodeApi","values","myHeaders","Headers","append","raw","JSON","stringify","requestOption","method","headers","body","redirect","mode","fetch","then","response","json","console","log","catch","error","container","title","handleChange","handleBlur","errors","touched","handleSubmit","inputStyle","titleErros","buttonSubmit","buttonTitle","button","navigate"],"sources":["/Users/caioaraujo/Desktop/STEP COMPUTER ACADEMY/MÓDULO 5 STEP/NODE JS/DEVERES NODE JS/PROJETO-FINAL/front-end/src/pages/login/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, View, TextInput, TouchableOpacity, Touchable } from 'react-native'\nimport { Formik } from 'formik'\nimport styles from './styles'\nimport * as yup from 'yup'\nimport { AuthContext } from '../../routes/context'\n\nconst loginValidationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('O email nao é válido')\n    .required('é necessário um email válido'),\n  password: yup\n    .string()\n    .min(6, ({ min }) => `A senha deve conter pelo menos  ${min} caractres`)\n    .required('é necessário uma senha valida válido'),\n})\n\nexport default function App({ navigation }) {\n  const { signIn } = React.useContext(AuthContext);\n\n  function loginUserInNodeApi(values) {\n    var myHeaders = new Headers()\n    myHeaders.append(\"Content-type\", \"application/json\")\n\n    var raw = JSON.stringify({\n      \"email\": values.email,\n      \"password\": values.password\n    })\n\n    var requestOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    }\n\n    fetch(\"http://localhost:8080/loginUser\", requestOption)\n      .then((response) => { return response.json() })\n      .then((response) => { console.log(response); })\n      .then((response) => { signIn() })\n      .catch((error) => { console.log(error); })\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>LOGIN</Text>\n      <Formik\n        style={{}}\n        validateOnMount={true}\n        validationSchema={loginValidationSchema}\n        initialValues={\n          {\n            email: \"\",\n            password: \"\",\n          }\n        }\n        onSubmit={values => loginUserInNodeApi(values)}\n      >\n        {\n          ({ handleChange, handleBlur, errors, values, touched, handleSubmit }) => (\n            <>\n\n\n              <TextInput\n                name=\"email\"\n                type={\"email\"}\n                value={values.email}\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu email\"\n              />\n              {(errors.email && touched.email) &&\n                <Text style={styles.titleErros}>{errors.email}</Text>\n              }\n\n              <TextInput\n                name=\"password\"\n                type={\"password\"}\n                value={values.password}\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite sua senha\"\n                secureTextEntry\n              />\n              {(errors.password && touched.password) &&\n                <Text style={styles.titleErros}>{errors.password}</Text>\n              }\n\n              <TouchableOpacity style={styles.buttonSubmit} onPress={handleSubmit}>\n                <Text style={styles.buttonTitle}>Login</Text>\n              </TouchableOpacity>\n            </>\n          )\n        }\n\n      </Formik>\n      <TouchableOpacity style={styles.button} onPress={()=>{navigation.navigate(\"createUser\")}}>\n        <Text style={styles.buttonTitle}>Criar usuário</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}