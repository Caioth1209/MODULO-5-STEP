{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginValidationSchema = yup.object().shape({\n  name: yup.string().required('é necessário um nome valido'),\n  email: yup.string().email('O email nao é válido').required('é necessário um email válido'),\n  password: yup.string().min(6, function (_ref) {\n    var min = _ref.min;\n    return \"A senha deve conter pelo menos  \" + min + \" caractres\";\n  }).required('é necessário uma senha válida')\n});\nexport default function App(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cadastrou = _useState2[0],\n      setCadastrou = _useState2[1];\n\n  function createUserInNodeApi(values) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"name\": values.name,\n      \"email\": values.email,\n      \"password\": values.password\n    });\n    var requestOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8080/addUser\", requestOption).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.subTitle,\n      children: \"Cadastro de usu\\xE1rio\"\n    }), _jsx(Formik, {\n      style: {},\n      validateOnMount: true,\n      validationSchema: loginValidationSchema,\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return createUserInNodeApi(values);\n      },\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n            handleBlur = _ref3.handleBlur,\n            errors = _ref3.errors,\n            values = _ref3.values,\n            touched = _ref3.touched,\n            handleSubmit = _ref3.handleSubmit;\n        return _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            name: \"name\",\n            type: \"name\",\n            value: values.name,\n            onChangeText: handleChange(\"name\"),\n            onBlur: handleBlur(\"name\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu nome\"\n          }), errors.name && touched.name && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.name\n          }), _jsx(TextInput, {\n            name: \"email\",\n            type: \"email\",\n            value: values.email,\n            onChangeText: handleChange(\"email\"),\n            onBlur: handleBlur(\"email\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu email\"\n          }), errors.email && touched.email && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.email\n          }), _jsx(TextInput, {\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChangeText: handleChange(\"password\"),\n            onBlur: handleBlur(\"password\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite sua senha\",\n            secureTextEntry: true\n          }), errors.password && touched.password && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.password\n          }), !cadastrou && _jsx(Text, {\n            style: styles.buttonTitle,\n            children: \"Cadastrar\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonTitle,\n              children: \"Cadastrar\"\n            })\n          })]\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '10%'\n  },\n  subTitle: {\n    fontSize: 16,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '2%'\n  },\n  inputStyle: {\n    width: 200,\n    height: 35,\n    borderRadius: 10,\n    marginTop: 30,\n    padding: 10,\n    borderColor: '#0f1b59',\n    borderWidth: 1\n  },\n  button: {\n    width: 200,\n    height: 35,\n    backgroundColor: '#0f1b59',\n    borderRadius: 10,\n    marginTop: '8%'\n  },\n  buttonTitle: {\n    fontSize: 16,\n    color: '#f5f5f5',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: 8\n  },\n  titleErros: {\n    fontSize: 12,\n    color: 'red',\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Formik","yup","loginValidationSchema","object","shape","name","string","required","email","password","min","App","navigation","cadastrou","setCadastrou","createUserInNodeApi","values","myHeaders","Headers","append","raw","JSON","stringify","requestOption","method","headers","body","redirect","mode","fetch","then","response","json","res","console","log","catch","error","styles","container","subTitle","handleChange","handleBlur","errors","touched","handleSubmit","inputStyle","titleErros","buttonTitle","button","StyleSheet","create","flex","justifyContent","alignItems","title","fontSize","color","fontWeight","marginTop","width","height","borderRadius","padding","borderColor","borderWidth","backgroundColor","textAlign"],"sources":["/Users/caioaraujo/Desktop/STEP COMPUTER ACADEMY/MÓDULO 5 STEP/NODE JS/DEVERES NODE JS/PROJETO-FINAL/front-end/src/pages/createUser/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, Touchable } from 'react-native'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\n\nconst loginValidationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('é necessário um nome valido'),\n  email: yup\n    .string()\n    .email('O email nao é válido')\n    .required('é necessário um email válido'),\n  password: yup\n    .string()\n    .min(6, ({min}) => `A senha deve conter pelo menos  ${min} caractres`)\n    .required('é necessário uma senha válida'),\n})\n\n\nexport default function App({navigation}) {\n    const [cadastrou, setCadastrou] = useState(false);\n\n  function createUserInNodeApi(values) {\n        var myHeaders = new Headers()\n        myHeaders.append(\"Content-type\", \"application/json\")\n  \n        var raw = JSON.stringify({\n          \"name\": values.name,\n          \"email\": values.email,\n          \"password\": values.password\n        })\n  \n        var requestOption = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow',\n          mode: 'cors'\n        }\n  \n        fetch(\"http://localhost:8080/addUser\", requestOption)\n          .then((response) => { return response.json() })\n          .then((res) => { \n               console.log(res);\n           })\n          .catch((error) => { console.log(error); })\n  \n      }\n  \n    return (\n      <View style={styles.container}>\n        <Text style={styles.subTitle}>Cadastro de usuário</Text>\n        <Formik\n          style={{}}\n          validateOnMount={true}\n          validationSchema={loginValidationSchema}\n          initialValues={\n            {\n              name: \"\",\n              email: \"\",\n              password: \"\",\n            }\n          }\n          onSubmit={values => createUserInNodeApi(values)}\n        >\n        {\n          ({ handleChange, handleBlur, errors, values, touched, handleSubmit }) => (\n            <>\n              <TextInput\n                name=\"name\"\n                type={\"name\"}\n                value={values.name}\n                onChangeText={handleChange(\"name\")}\n                onBlur={handleBlur(\"name\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu nome\"\n              />\n              {(errors.name && touched.name) &&\n                <Text style={styles.titleErros}>{errors.name}</Text>\n              }\n\n              <TextInput\n                name=\"email\"\n                type={\"email\"}\n                value={values.email}\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu email\"\n              />\n              {(errors.email && touched.email) &&\n                <Text style={styles.titleErros}>{errors.email}</Text>\n              }\n\n              <TextInput\n                name=\"password\"\n                type={\"password\"}\n                value={values.password}\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite sua senha\"\n                secureTextEntry\n              />\n              {(errors.password && touched.password) &&\n                <Text style={styles.titleErros}>{errors.password}</Text>\n              }\n\n              {!cadastrou &&\n              <Text style={styles.buttonTitle}>Cadastrar</Text>\n                }\n\n              <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n                <Text style={styles.buttonTitle}>Cadastrar</Text>\n              </TouchableOpacity>\n            </>\n          )\n        }\n\n      </Formik>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '10%'\n  },\n  subTitle: {\n    fontSize: 16,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '2%'\n  },\n  inputStyle: {\n    width: 200,\n    height: 35,\n    //backgroundColor:'#0f1b59',\n    borderRadius: 10,\n    marginTop: 30,\n    padding: 10,\n    borderColor: '#0f1b59',\n    borderWidth: 1\n  },\n  button: {\n    width: 200,\n    height: 35,\n    backgroundColor: '#0f1b59',\n    borderRadius: 10,\n    marginTop: '8%',\n  },\n  buttonTitle: {\n    fontSize: 16,\n    color: '#f5f5f5',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: 8\n  },\n  titleErros: {\n    fontSize: 12,\n    color: 'red',\n    fontWeight: \"600\"\n  }\n})\n\n\n// import React, { useState } from 'react'\n// import { Text, View, TextInput, TouchableOpacity, Button } from 'react-native'\n// import { Formik } from 'formik'\n// import styles from './styles'\n// import * as yup from 'yup'\n\n// const loginValidationSchema = yup.object().shape({\n//   name: yup\n//     .string()\n//     .required('É necessário um nome valido'),\n//   email: yup\n//     .string()\n//     .email('O email nao é válido')\n//     .required('É necessário um email válido'),\n//   password: yup\n//     .string()\n//     .min(6, ({min}) => `A senha deve conter pelo menos ${min} caracteres`)\n//     .required('É necessário uma senha válida'),\n// })\n\n\n// export default function App() {\n  \n//    function createUserInNodeApi(values) {\n//       var myHeaders = new Headers()\n//       myHeaders.append(\"Content-type\", \"application/json\")\n\n//       var raw = JSON.stringify({\n//         \"name\": values.name,\n//         \"email\": values.email,\n//         \"password\": values.password\n//       })\n\n//       var requestOption = {\n//         method: 'POST',\n//         headers: myHeaders,\n//         body: raw,\n//         redirect: 'follow',\n//         mode: 'cors'\n//       }\n\n//       fetch(\"http://localhost:8080/addUser\", requestOption)\n//         .then((response) => { return response.json() })\n//         .then((response) => { console.log(response); })\n//         .catch((error) => { console.log(error); })\n\n//    }\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.title}>FRONT-END NODE JS</Text>\n//       <Text style={styles.subTitle}>Trabalho final da turma de node js</Text>\n\n//       <Text style={styles.subTitle}>Cadastro de usuario</Text>\n//       <Formik\n//         style={{}}\n//         validateOnMount={true}\n//         validationSchema={loginValidationSchema}\n//         initialValues={\n//           {\n//             name: \"\",\n//             email: \"\",\n//             password: \"\",\n//           }\n//         }\n//         onSubmit={values => createUserInNodeApi(values)}\n//       >\n//         {\n//           ({ handleChange, handleBlur, errors, values, touched, handleSubmit }) => (\n//             <View>\n//               <TextInput\n//                 name=\"name\"\n//                 type={\"name\"}\n//                 value={values.name}\n//                 onChangeText={handleChange(\"name\")}\n//                 onBlur={handleBlur(\"name\")}\n//                 style={styles.inputStyle}\n//                 placeholder=\"Digite seu nome\"\n//               />\n//               {(errors.name && touched.name) &&\n//                 <Text style={styles.titleErros}>{errors.name}</Text>\n//               }\n\n//               <TextInput\n//                 name=\"email\"\n//                 type={\"email\"}\n//                 value={values.email}\n//                 onChangeText={handleChange(\"email\")}\n//                 onBlur={handleBlur(\"email\")}\n//                 style={styles.inputStyle}\n//                 placeholder=\"Digite seu email\"\n//               />\n//               {(errors.email && touched.email) &&\n//                 <Text style={styles.titleErros}>{errors.email}</Text>\n//               }\n\n//               <TextInput\n//                 name=\"password\"\n//                 type={\"password\"}\n//                 value={values.password}\n//                 onChangeText={handleChange(\"password\")}\n//                 onBlur={handleBlur(\"password\")}\n//                 style={styles.inputStyle}\n//                 placeholder=\"Digite sua senha\"\n//                 secureTextEntry\n//               />\n//               {(errors.password && touched.password) &&\n//                 <Text style={styles.titleErros}>{errors.password}</Text>\n//               }\n\n//               {/* <TouchableOpacity style={styles.button} onPress={()=>{handleSubmit}}>\n//                 <Text style={styles.buttonTitle}>Cadastrar</Text>\n//               </TouchableOpacity> */}\n//               <Button style={styles.button} onPress={handleSubmit} title=\"Cadastrar\" />\n//             </View>\n//           )\n//         }\n\n//       </Formik>\n\n\n//     </View>\n//   )\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}