{"ast":null,"code":"import React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { AuthContext } from \"../../routes/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginValidationSchema = yup.object().shape({\n  email: yup.string().email('O email nao é válido').required('é necessário um email válido'),\n  password: yup.string().min(6, function (_ref) {\n    var min = _ref.min;\n    return \"A senha deve conter pelo menos  \" + min + \" caractres\";\n  }).required('é necessário uma senha valida válido')\n});\nexport default function App(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  function loginUserInNodeApi(values) {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": values.email,\n      \"password\": values.password\n    });\n    var requesteOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    };\n    fetch(\"http://localhost:8080/loginUser\", requesteOption).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n    }).then(function (response) {\n      signIn();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"LOGIN\"\n    }), _jsx(Formik, {\n      style: {},\n      validateOnMount: true,\n      validationSchema: loginValidationSchema,\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        return loginUserInNodeApi(values);\n      },\n      children: function children(_ref3) {\n        var handleChange = _ref3.handleChange,\n            handleBlur = _ref3.handleBlur,\n            errors = _ref3.errors,\n            values = _ref3.values,\n            touched = _ref3.touched,\n            handleSubmit = _ref3.handleSubmit;\n        return _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            name: \"email\",\n            type: \"email\",\n            value: values.email,\n            onChangeText: handleChange(\"email\"),\n            onBlur: handleBlur(\"email\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite seu email\"\n          }), errors.email && touched.email && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.email\n          }), _jsx(TextInput, {\n            name: \"password\",\n            type: \"password\",\n            value: values.password,\n            onChangeText: handleChange(\"password\"),\n            onBlur: handleBlur(\"password\"),\n            style: styles.inputStyle,\n            placeholder: \"Digite sua senha\",\n            secureTextEntry: true\n          }), errors.password && touched.password && _jsx(Text, {\n            style: styles.titleErros,\n            children: errors.password\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.buttonTitle,\n              children: \"Cadastrar\"\n            })\n          })]\n        });\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        signIn();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonTitle,\n        children: \"Logar\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '10%'\n  },\n  subTitle: {\n    fontSize: 16,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '2%'\n  },\n  inputStyle: {\n    width: 200,\n    height: 35,\n    borderRadius: 10,\n    marginTop: 30,\n    padding: 10,\n    borderColor: '#0f1b59',\n    borderWidth: 1\n  },\n  button: {\n    width: 200,\n    height: 35,\n    backgroundColor: '#0f1b59',\n    borderRadius: 10,\n    marginTop: '8%'\n  },\n  buttonTitle: {\n    fontSize: 16,\n    color: '#f5f5f5',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: 8\n  },\n  titleErros: {\n    fontSize: 12,\n    color: 'red',\n    fontWeight: \"600\"\n  }\n});","map":{"version":3,"names":["React","useState","Formik","yup","AuthContext","loginValidationSchema","object","shape","email","string","required","password","min","App","navigation","useContext","signIn","loginUserInNodeApi","values","myHeaders","Headers","append","raw","JSON","stringify","requesteOption","method","headers","body","redirect","mode","fetch","then","response","json","console","log","catch","error","styles","container","title","handleChange","handleBlur","errors","touched","handleSubmit","inputStyle","titleErros","button","buttonTitle","StyleSheet","create","flex","justifyContent","alignItems","fontSize","color","fontWeight","marginTop","subTitle","width","height","borderRadius","padding","borderColor","borderWidth","backgroundColor","textAlign"],"sources":["/Users/caioaraujo/Desktop/STEP COMPUTER ACADEMY/MÓDULO 5 STEP/NODE JS/DEVERES NODE JS/PROJETO-FINAL/front-end/src/pages/login/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, Touchable } from 'react-native'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { AuthContext } from '../../routes/context'\n\nconst loginValidationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('O email nao é válido')\n    .required('é necessário um email válido'),\n  password: yup\n    .string()\n    .min(6, ({ min }) => `A senha deve conter pelo menos  ${min} caractres`)\n    .required('é necessário uma senha valida válido'),\n})\n\nexport default function App({ navigation }) {\n  const { signIn } = React.useContext(AuthContext)\n\n  function loginUserInNodeApi(values) {\n    var myHeaders = new Headers()\n    myHeaders.append(\"Content-type\", \"application/json\")\n\n    var raw = JSON.stringify({\n      \"email\": values.email,\n      \"password\": values.password\n    })\n\n    var requesteOption = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    }\n\n    fetch(\"http://localhost:8080/loginUser\", requesteOption)\n      .then((response) => { return response.json() })\n      .then((response) => { console.log(response); })\n      .then((response) => { signIn() })\n      .catch((error) => { console.log(error); })\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>LOGIN</Text>\n      <Formik\n        style={{}}\n        validateOnMount={true}\n        validationSchema={loginValidationSchema}\n        initialValues={\n          {\n            email: \"\",\n            password: \"\",\n          }\n        }\n        \n        onSubmit={values => loginUserInNodeApi(values)}\n      >\n        {\n          ({ handleChange, handleBlur, errors, values, touched, handleSubmit }) => (\n            <>\n\n\n              <TextInput\n                name=\"email\"\n                type={\"email\"}\n                value={values.email}\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite seu email\"\n              />\n              {(errors.email && touched.email) &&\n                <Text style={styles.titleErros}>{errors.email}</Text>\n              }\n\n              <TextInput\n                name=\"password\"\n                type={\"password\"}\n                value={values.password}\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                style={styles.inputStyle}\n                placeholder=\"Digite sua senha\"\n                secureTextEntry\n              />\n              {(errors.password && touched.password) &&\n                <Text style={styles.titleErros}>{errors.password}</Text>\n              }\n\n              <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n                <Text style={styles.buttonTitle} >Cadastrar</Text>\n              </TouchableOpacity>\n            </>\n          )\n        }\n\n      </Formik>\n      <TouchableOpacity style={styles.button} onPress={() => { signIn() }}>\n        <Text style={styles.buttonTitle} >Logar</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '10%'\n  },\n  subTitle: {\n    fontSize: 16,\n    color: 'gray',\n    fontWeight: '700',\n    marginTop: '2%'\n  },\n  inputStyle: {\n    width: 200,\n    height: 35,\n    //backgroundColor:'#0f1b59',\n    borderRadius: 10,\n    marginTop: 30,\n    padding: 10,\n    borderColor: '#0f1b59',\n    borderWidth: 1\n  },\n  button: {\n    width: 200,\n    height: 35,\n    backgroundColor: '#0f1b59',\n    borderRadius: 10,\n    marginTop: '8%',\n  },\n  buttonTitle: {\n    fontSize: 16,\n    color: '#f5f5f5',\n    fontWeight: '700',\n    textAlign: 'center',\n    marginTop: 8\n  },\n  titleErros: {\n    fontSize: 12,\n    color: 'red',\n    fontWeight: \"600\"\n  }\n})\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}